import{d as f,r as y,o as a,c as d,a as s,F as h,b as p,n as k,t as m,u as i,w as v,v as b,e as I,f as R,g as _,h as M,i as S,j as C}from"./vendor.a10aecef.js";const L=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))u(o);new MutationObserver(o=>{for(const e of o)if(e.type==="childList")for(const n of e.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&u(n)}).observe(document,{childList:!0,subtree:!0});function l(o){const e={};return o.integrity&&(e.integrity=o.integrity),o.referrerpolicy&&(e.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?e.credentials="include":o.crossorigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function u(o){if(o.ep)return;o.ep=!0;const e=l(o);fetch(o.href,e)}};L();const x="Player"+Math.floor(Math.random()*1e4+1e3),g=f("game",{state:()=>({name:x,socketId:null,roomId:null,chat:[],debug:[],rooms:{}}),actions:{setSocketId(c){this.socketId=c},setRoomId(c){this.roomId=c},debugMessage(c){this.debug.unshift(c)},update(c){var t;this.rooms=c,this.chat=((t=this.rooms[this.roomId])==null?void 0:t.chat)||[]}},getters:{currentRoom(){return this.rooms[this.roomId]||{}}}});const O={class:"chat"},w={class:"chat-output"},N=["onKeydown"],E={props:["socket"],setup(c){const t=c,l=g(),u=y({input:""}),o=()=>{t.socket.emit("chatMessage",u.input),u.input=""};return(e,n)=>(a(),d("div",O,[s("div",w,[(a(!0),d(h,null,p(i(l).chat,r=>(a(),d("div",{class:k(["chat-row",[r.name=="SERVER"?"system":""]])},[s("span",null,m(r.time),1),s("strong",null,"[ "+m(r.name)+" ]",1),s("span",null,m(r.msg),1)],2))),256))]),v(s("input",{type:"text","onUpdate:modelValue":n[0]||(n[0]=r=>i(u).input=r),onKeydown:I(o,["enter"])},null,40,N),[[b,i(u).input]])]))}};const V=s("h1",null,"HELLO!",-1),$={class:"main"},j={key:1,class:"right"},B=s("h4",null,"ROOMS",-1),K=["onClick"],P=s("h4",null,"Debug",-1),A={class:"debug"},F=s("h4",null,"Store",-1),q={setup(c){const t=g(),l=new io("ws://localhost:8080",{query:{name:t.name}}),u=()=>{const e=prompt("name");l.emit("host",e,n=>{console.log("created room callback",n),t.setRoomId(n)})},o=e=>{l.emit("join",e.id,n=>{console.log("created room callback",n),t.setRoomId(n)})};return l.on("connect",e=>{console.log("connect",e),t.setSocketId(l.id),t.setRoomId(null)}),l.on("debugMessage",e=>{t.debugMessage(e),console.log("debugMessage",e)}),l.on("update",e=>{t.update(e),console.log("update",e)}),(e,n)=>(a(),d(h,null,[V,s("h3",null,m(i(t).currentRoom.name),1),s("section",$,[i(t).roomId?(a(),R(E,{key:0,socket:i(l)},null,8,["socket"])):_("",!0),i(t).roomId?_("",!0):(a(),d("div",j,[B,s("button",{onClick:u},"Create Room"),(a(!0),d(h,null,p(i(t).rooms,r=>(a(),d("p",null,[M(m(r.name)+" ( "+m(r.clients.length)+" ) ",1),s("button",{onClick:z=>o(r)},"Join",8,K)]))),256))]))]),P,s("section",A,[(a(!0),d(h,null,p(i(t).debug,r=>(a(),d("p",null,m(r),1))),256))]),F,s("pre",null,[s("code",null,m(i(t)),1)])],64))}},T=S();C(q).use(T).mount("#app");
